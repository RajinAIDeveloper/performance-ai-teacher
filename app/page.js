'use client'
import React, { useState, useEffect } from 'react';
import { ChevronRight, Brain, Target, TrendingUp, Users, Star, ArrowRight, CheckCircle, Calendar, BookOpen, Briefcase, Globe, Trophy, Zap, Award, Menu, X } from 'lucide-react';
import { useUser, SignInButton, UserButton } from '@clerk/nextjs';

const LandingPage = () => {
  const [currentStep, setCurrentStep] = useState(0);
  const [language, setLanguage] = useState('en');
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const { user, isSignedIn } = useUser();
  
  const isAdmin = isSignedIn && user?.emailAddresses?.[0]?.emailAddress === 'ultrotech1236@gmail.com';
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    university: '',
    major: '',
    year: '',
    currentGPA: '',
    trackingDifficulty: '',
    studyHours: '',
    quizFrequency: '',
    tutorUsage: '',
    cvImportance: '',
    pricingTier: '',
    customPrice: '',
    adTolerance: '',
    trialInterest: '',
    referralReward: '',
    preferredReward: '',
    preferredFeatures: [],
    deviceUsage: '',
    universityType: '',
    studyMethod: '',
    sessionLength: '',
    aiExplanationImportance: '',
    referralLikelihood: '',
    referralSource: '',
    gamificationInterest: '',
    competitiveFeatures: [],
    leaderboardParticipation: '',
    studyStreakImportance: '',
    badgeMotivation: '',
    referralId: ''
  });

  const translations = {
    en: {
      title: "Performance AI",
      hero: "Your AI Study Coach That Tracks Everything",
      heroSub: "Stop juggling multiple apps. Track your GPA, get personalized AI quizzes, and build your career‚Äîall in one intelligent platform designed for students.",
      freeOffer: "üéâ FREE Tier Available",
      freeDesc: "Start Free with Basic Features",
      trialDesc: "+ 7-day premium trial ‚Ä¢ No credit card required",
      getAccess: "Get Early Access",
      joinWaitlist: "Join Waitlist",
      features: {
        quiz: { title: "AI-Powered Quizzes", desc: "Generate personalized quizzes for any subject in seconds" },
        track: { title: "GPA Tracking", desc: "Monitor your academic progress in one unified dashboard" },
        analytics: { title: "Smart Analytics", desc: "Identify your weaknesses and track improvement over time" },
        tutor: { title: "AI Tutor", desc: "Get instant help with homework and concept explanations" }
      },
      steps: {
        personal: "Personal Information",
        academic: "Academic Situation", 
        study: "Study Habits & Preferences",
        features: "Feature Preferences",
        pricing: "Pricing & Plans",
        usage: "Usage & Preferences"
      }
    },
    bn: {
      title: "‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßá‡¶®‡ßç‡¶∏ ‡¶è‡¶Ü‡¶á",
      hero: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶Ü‡¶á ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶ï‡ßã‡¶ö ‡¶Ø‡¶æ ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡ßá",
      heroSub: "‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶ù‡¶æ‡¶Æ‡ßá‡¶≤‡¶æ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ú‡¶ø‡¶™‡¶ø‡¶è ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®, ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§‡¶ï‡ßÉ‡¶§ ‡¶è‡¶Ü‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶™‡¶æ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ó‡¶°‡¶º‡ßÅ‡¶®‚Äî‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßÅ‡¶¶‡ßç‡¶ß‡¶ø‡¶Æ‡¶æ‡¶® ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ‡ßá‡•§",
      freeOffer: "üéâ ‡¶´‡ßç‡¶∞‡¶ø ‡¶ü‡¶æ‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶â‡¶™‡¶≤‡¶¨‡ßç‡¶ß",
      freeDesc: "‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶´‡ßç‡¶∞‡¶ø ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®",
      trialDesc: "+ ‡ß≠-‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶ü‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡¶æ‡¶≤ ‚Ä¢ ‡¶ï‡ßã‡¶® ‡¶ï‡ßç‡¶∞‡ßá‡¶°‡¶ø‡¶ü ‡¶ï‡¶æ‡¶∞‡ßç‡¶° ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶®‡ßá‡¶á",
      getAccess: "‡¶Ü‡¶∞‡ßç‡¶≤‡¶ø ‡¶è‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶™‡¶æ‡¶®",
      joinWaitlist: "‡¶ì‡¶Ø‡¶º‡ßá‡¶ü‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ø‡¶®",
      features: {
        quiz: { title: "‡¶è‡¶Ü‡¶á-‡¶ö‡¶æ‡¶≤‡¶ø‡¶§ ‡¶ï‡ßÅ‡¶á‡¶ú", desc: "‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá‡¶á ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§‡¶ï‡ßÉ‡¶§ ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®" },
        track: { title: "‡¶ú‡¶ø‡¶™‡¶ø‡¶è ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç", desc: "‡¶è‡¶ï‡¶ü‡¶ø ‡¶è‡¶ï‡ßÄ‡¶≠‡ßÇ‡¶§ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶ï‡¶æ‡¶°‡ßá‡¶Æ‡¶ø‡¶ï ‡¶Ö‡¶ó‡ßç‡¶∞‡¶ó‡¶§‡¶ø ‡¶Æ‡¶®‡¶ø‡¶ü‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®" },
        analytics: { title: "‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏", desc: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¶‡ßÅ‡¶∞‡ßç‡¶¨‡¶≤‡¶§‡¶æ ‡¶ö‡¶ø‡¶π‡ßç‡¶®‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶â‡¶®‡ßç‡¶®‡¶§‡¶ø ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®" },
        tutor: { title: "‡¶è‡¶Ü‡¶á ‡¶ü‡¶ø‡¶â‡¶ü‡¶∞", desc: "‡¶π‡ßã‡¶Æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶ï ‡¶è‡¶¨‡¶Ç ‡¶ß‡¶æ‡¶∞‡¶£‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶™‡¶æ‡¶®" }
      },
      steps: {
        personal: "‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø",
        academic: "‡¶è‡¶ï‡¶æ‡¶°‡ßá‡¶Æ‡¶ø‡¶ï ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ",
        study: "‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶Ö‡¶≠‡ßç‡¶Ø‡¶æ‡¶∏ ‡¶ì ‡¶™‡¶õ‡¶®‡ßç‡¶¶",
        features: "‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶",
        pricing: "‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶∏‡¶ø‡¶Ç ‡¶ì ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®",
        usage: "‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ì ‡¶™‡¶õ‡¶®‡ßç‡¶¶"
      }
    }
  };

  const t = translations[language];

  const updateFormData = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const nextStep = () => {
    if (currentStep < steps.length) {
      setCurrentStep(currentStep + 1);
    }
  };

  const prevStep = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const pricingTiers = [
    {
      name: language === 'bn' ? '‡¶´‡ßç‡¶∞‡¶ø' : 'Free',
      price: '$0',
      description: language === 'bn' ? '‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®‡¶∏‡¶π ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞' : 'Basic features with ads',
      features: language === 'bn' ? 
        ['‡ß´‡¶ü‡¶ø ‡¶è‡¶Ü‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú/‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π', '‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶ú‡¶ø‡¶™‡¶ø‡¶è ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç', '‡¶∏‡ßÄ‡¶Æ‡¶ø‡¶§ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ', '‡¶á‡¶Æ‡ßá‡¶ú ‡¶ì ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®', '‡ß≠-‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶ü‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡¶æ‡¶≤'] :
        ['5 AI quizzes/week', 'Basic GPA tracking', 'Limited explanations', 'Image & video ads', '7-day premium trial']
    },
    {
      name: language === 'bn' ? '‡¶∏‡ßç‡¶ü‡ßÅ‡¶°‡ßá‡¶®‡ßç‡¶ü' : 'Student',
      price: '$5',
      description: language === 'bn' ? '‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡¶æ‡¶∞‡¶´‡ßá‡¶ï‡ßç‡¶ü' : 'Perfect for individual students',
      features: language === 'bn' ? 
        ['‡¶Ü‡¶®‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶° ‡¶ï‡ßÅ‡¶á‡¶ú', '‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶≠‡¶æ‡¶®‡ßç‡¶∏‡¶° ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏', '‡¶è‡¶Ü‡¶á ‡¶ü‡¶ø‡¶â‡¶ü‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏', '‡¶ï‡ßã‡¶® ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶® ‡¶®‡ßá‡¶á'] :
        ['Unlimited quizzes', 'Advanced analytics', 'AI tutor access', 'No ads']
    },
    {
      name: language === 'bn' ? '‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ' : 'Premium',
      price: '$15',
      description: language === 'bn' ? '‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏' : 'Full feature access',
      features: language === 'bn' ? 
        ['‡¶∏‡ßç‡¶ü‡ßÅ‡¶°‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ', '‡¶∏‡¶ø‡¶≠‡¶ø ‡¶¨‡¶ø‡¶≤‡ßç‡¶°‡¶æ‡¶∞', '‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∞‡ßã‡¶°‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™', '‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶ì‡¶∞‡¶ø‡¶ü‡¶ø ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü'] :
        ['Everything in Student', 'CV builder', 'Career roadmap', 'Priority support']
    },
    {
      name: language === 'bn' ? '‡¶™‡ßç‡¶∞‡ßã' : 'Pro',
      price: '$25',
      description: language === 'bn' ? '‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø' : 'For serious students',
      features: language === 'bn' ? 
        ['‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ', '‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ü‡¶ø‡¶â‡¶ü‡¶∞‡¶ø‡¶Ç ‡¶∏‡ßá‡¶∂‡¶®', '‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶≠‡¶æ‡¶®‡ßç‡¶∏‡¶° ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ü‡ßÅ‡¶≤‡¶∏', '‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø ‡¶™‡¶æ‡¶∞‡ßç‡¶ü‡¶®‡¶æ‡¶∞‡¶∂‡¶ø‡¶™'] :
        ['Everything in Premium', 'Live tutoring sessions', 'Advanced career tools', 'University partnerships']
    }
  ];

  const features = [
    { 
      icon: <Brain className="w-6 h-6" />, 
      title: t.features.quiz.title, 
      desc: t.features.quiz.desc 
    },
    { 
      icon: <Target className="w-6 h-6" />, 
      title: t.features.track.title, 
      desc: t.features.track.desc 
    },
    { 
      icon: <TrendingUp className="w-6 h-6" />, 
      title: t.features.analytics.title, 
      desc: t.features.analytics.desc 
    },
    { 
      icon: <Users className="w-6 h-6" />, 
      title: t.features.tutor.title, 
      desc: t.features.tutor.desc 
    }
  ];

  const steps = [
    {
      title: t.steps.personal,
      fields: [
        { key: "name", label: language === 'bn' ? "‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ" : "Full Name", type: "text", required: true },
        { key: "email", label: language === 'bn' ? "‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø ‡¶á‡¶Æ‡ßá‡¶á‡¶≤" : "University Email", type: "email", required: true },
        { key: "phone", label: language === 'bn' ? "‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞" : "Phone Number", type: "tel", required: true },
        { key: "university", label: language === 'bn' ? "‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø‡¶∞ ‡¶®‡¶æ‡¶Æ" : "University Name", type: "text", required: true },
        { key: "major", label: language === 'bn' ? "‡¶Æ‡ßá‡¶ú‡¶∞/‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞" : "Major/Field of Study", type: "text", required: true },
        { 
          key: "year", 
          label: language === 'bn' ? "‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶¨‡¶õ‡¶∞" : "Year of Study", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡ßß‡¶Æ ‡¶¨‡¶∞‡ßç‡¶∑", "‡ß®‡¶Ø‡¶º ‡¶¨‡¶∞‡ßç‡¶∑", "‡ß©‡¶Ø‡¶º ‡¶¨‡¶∞‡ßç‡¶∑", "‡ß™‡¶∞‡ßç‡¶• ‡¶¨‡¶∞‡ßç‡¶∑", "‡¶∏‡ßç‡¶®‡¶æ‡¶§‡¶ï"] :
            ["1st Year", "2nd Year", "3rd Year", "4th Year", "Graduate"], 
          required: true 
        },
        { key: "referralId", label: language === 'bn' ? "‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶ï‡ßã‡¶° (‡¶Ø‡¶¶‡¶ø ‡¶•‡¶æ‡¶ï‡ßá)" : "Referral Code (if any)", type: "text", required: false }
      ]
    },
    {
      title: t.steps.academic,
      fields: [
        { 
          key: "currentGPA", 
          label: language === 'bn' ? "‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶ú‡¶ø‡¶™‡¶ø‡¶è (‡¶Ø‡¶¶‡¶ø ‡¶Ü‡¶∞‡¶æ‡¶Æ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ï ‡¶π‡¶Ø‡¶º)" : "Current GPA (if comfortable sharing)", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡ß®.‡ß´ ‡¶è‡¶∞ ‡¶®‡¶ø‡¶ö‡ßá", "‡ß®.‡ß´-‡ß©.‡ß¶", "‡ß©.‡ß¶-‡ß©.‡ß´", "‡ß©.‡ß´-‡ß™.‡ß¶", "‡¶¨‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶á ‡¶®‡¶æ"] :
            ["Below 2.5", "2.5-3.0", "3.0-3.5", "3.5-4.0", "Prefer not to say"]
        },
        { 
          key: "trackingDifficulty", 
          label: language === 'bn' ? "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶ï‡¶æ‡¶°‡ßá‡¶Æ‡¶ø‡¶ï ‡¶Ö‡¶ó‡ßç‡¶∞‡¶ó‡¶§‡¶ø ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶ï‡¶§‡¶ü‡¶æ ‡¶ï‡¶†‡¶ø‡¶®?" : "How difficult is it to track your academic progress?", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶ï‡¶†‡¶ø‡¶®", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶ï‡¶†‡¶ø‡¶®", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶∏‡¶π‡¶ú", "‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶∏‡¶π‡¶ú"] :
            ["Very difficult", "Somewhat difficult", "Neutral", "Somewhat easy", "Very easy"], 
          required: true 
        },
        { 
          key: "studyHours", 
          label: language === 'bn' ? "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π‡ßá ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶Ø‡¶º‡¶ø‡¶§ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ" : "Hours spent studying per week", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡ß´ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶Æ", "‡ß´-‡ßß‡ß¶ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ", "‡ßß‡ß¶-‡ß®‡ß¶ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ", "‡ß®‡ß¶-‡ß©‡ß¶ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ", "‡ß©‡ß¶+ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ"] :
            ["<5 hours", "5-10 hours", "10-20 hours", "20-30 hours", ">30 hours"], 
          required: true 
        }
      ]
    },
    {
      title: t.steps.study,
      fields: [
        { 
          key: "quizFrequency", 
          label: language === 'bn' ? "‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶§ ‡¶ò‡¶® ‡¶ò‡¶® ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶è‡¶Ü‡¶á-‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü‡ßá‡¶° ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá‡¶®?" : "How often would you use daily AI-generated quizzes?", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶®", "‡ß™-‡ß¨ ‡¶¨‡¶æ‡¶∞/‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π", "‡ß®-‡ß© ‡¶¨‡¶æ‡¶∞/‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π", "‡¶∏‡¶æ‡¶™‡ßç‡¶§‡¶æ‡¶π‡¶ø‡¶ï", "‡¶ï‡¶¶‡¶æ‡¶ö‡¶ø‡ßé"] :
            ["Daily", "4-6 times/week", "2-3 times/week", "Weekly", "Rarely"], 
          required: true 
        },
        { 
          key: "tutorUsage", 
          label: language === 'bn' ? "‡¶è‡¶Ü‡¶á Q&A ‡¶ü‡¶ø‡¶â‡¶ü‡¶∞‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π‡ßá ‡¶ï‡¶§ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ ‡¶¨‡ßç‡¶Ø‡¶Ø‡¶º ‡¶ï‡¶∞‡¶¨‡ßá‡¶®" : "Hours per week you'd spend with an AI Q&A tutor", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡ßß ‡¶ò‡¶£‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶Æ", "‡ßß-‡ß® ‡¶ò‡¶£‡ßç‡¶ü‡¶æ", "‡ß®-‡ß™ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ", "‡ß™+ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ"] :
            ["<1 hour", "1-2 hours", "2-4 hours", "4+ hours"], 
          required: true 
        },
        { 
          key: "studyMethod", 
          label: language === 'bn' ? "‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶® ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø" : "Preferred study method", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡¶≠‡¶ø‡¶ú‡ßç‡¶Ø‡ßÅ‡¶Ø‡¶º‡¶æ‡¶≤ ‡¶≤‡¶æ‡¶∞‡ßç‡¶®‡¶æ‡¶∞", "‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ü‡¶ø‡¶∏ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®", "‡¶®‡ßã‡¶ü ‡¶™‡¶°‡¶º‡¶æ", "‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü", "‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø"] :
            ["Visual learner", "Practice questions", "Reading notes", "Video content", "Group study"]
        },
        { 
          key: "sessionLength", 
          label: language === 'bn' ? "‡¶Ü‡¶¶‡¶∞‡ßç‡¶∂ ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶® ‡¶∏‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶¶‡ßà‡¶∞‡ßç‡¶ò‡ßç‡¶Ø" : "Ideal study session length", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡ßß‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá‡¶∞ ‡¶ï‡¶Æ", "‡ßß‡ß´-‡ß©‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü", "‡ß©‡ß¶-‡ß¨‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü", "‡ßß-‡ß® ‡¶ò‡¶£‡ßç‡¶ü‡¶æ", "‡ß®+ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ"] :
            ["<15 minutes", "15-30 minutes", "30-60 minutes", "1-2 hours", ">2 hours"]
        }
      ]
    },
    {
      title: t.steps.features,
      fields: [
        { 
          key: "cvImportance", 
          label: language === 'bn' ? "‡¶è‡¶Ü‡¶á-‡¶ö‡¶æ‡¶≤‡¶ø‡¶§ ‡¶∏‡¶ø‡¶≠‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶§‡¶ü‡¶æ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£?" : "How important is AI-powered CV building for you?", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡¶Ö‡¶§‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£", "‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£", "‡¶ñ‡ßÅ‡¶¨ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶Ø‡¶º", "‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶Ø‡¶º"] :
            ["Extremely important", "Very important", "Somewhat important", "Not very important", "Not important"], 
          required: true 
        },
        { 
          key: "aiExplanationImportance", 
          label: language === 'bn' ? "‡¶≠‡ßÅ‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶è‡¶Ü‡¶á ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶§‡¶ü‡¶æ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£?" : "How important are detailed AI explanations for wrong answers?", 
          type: "select", 
          options: language === 'bn' ? 
            ["‡¶Ö‡¶§‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£", "‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£", "‡¶ñ‡ßÅ‡¶¨ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶Ø‡¶º", "‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶Ø‡¶º"] :
            ["Extremely important", "Very important", "Somewhat important", "Not very important", "Not important"]
        },
        { 
          key: "preferredFeatures", 
          label: language === 'bn' ? "‡¶ï‡ßã‡¶® ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßá‡¶∞?" : "Which features interest you most?", 
          type: "multiselect", 
          options: language === 'bn' ? 
            ["‡¶è‡¶Ü‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü‡¶∞", "‡¶ú‡¶ø‡¶™‡¶ø‡¶è ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç", "‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶∂‡¶ø‡¶°‡¶ø‡¶â‡¶≤‡¶æ‡¶∞", "‡¶è‡¶Ü‡¶á ‡¶ü‡¶ø‡¶â‡¶ü‡¶∞", "‡¶∏‡¶ø‡¶≠‡¶ø ‡¶¨‡¶ø‡¶≤‡ßç‡¶°‡¶æ‡¶∞", "‡¶ú‡¶¨ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ö‡¶ø‡¶Ç", "‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∞‡ßã‡¶°‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™"] :
            ["AI Quiz Generator", "GPA Tracking", "Study Scheduler", "AI Tutor", "CV Builder", "Job Matching", "Career Roadmap"], 
          required: true 
        },
        {
          key: "gamificationInterest",
          label: language === 'bn' ? "‡¶ó‡ßá‡¶Æ‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ (‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü, ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú, ‡¶≤‡ßá‡¶≠‡ßá‡¶≤) ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π ‡¶ú‡¶æ‡¶ó‡¶æ‡¶Ø‡¶º?" : "Are you interested in gamification features (points, badges, levels)?",
          type: "select",
          options: language === 'bn' ? 
            ["‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶ñ‡ßÅ‡¶¨ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º", "‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º"] :
            ["Very interested", "Somewhat interested", "Neutral", "Not very interested", "Not interested"],
          required: true
        },
        {
          key: "competitiveFeatures",
          label: language === 'bn' ? "‡¶ï‡ßã‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶™‡¶°‡¶º‡¶§‡ßá ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡¶æ‡¶£‡¶ø‡¶§ ‡¶ï‡¶∞‡¶¨‡ßá?" : "Which competitive features would motivate you to study more?",
          type: "multiselect",
          options: language === 'bn' ? 
            ["‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶°", "‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ", "‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú", "‡¶∏‡¶æ‡¶™‡ßç‡¶§‡¶æ‡¶π‡¶ø‡¶ï ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶ô‡ßç‡¶ï‡¶ø‡¶Ç", "‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú", "‡¶ï‡ßã‡¶®‡¶ü‡¶ø‡¶á ‡¶®‡¶Ø‡¶º"] :
            ["Global leaderboards", "Friend competitions", "Study streak challenges", "Weekly rankings", "Achievement badges", "None of these"]
        }
      ]
    },
    {
      title: t.steps.pricing,
      description: language === 'bn' ? 
        "‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®‡¶∏‡¶π ‡¶è‡¶ï‡¶ü‡¶ø ‡¶´‡ßç‡¶∞‡¶ø ‡¶ü‡¶æ‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶Ö‡¶™‡¶∂‡¶® ‡¶Ö‡¶´‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶ø:" :
        "We offer a FREE tier with basic features and ads, plus premium options:",
      fields: [
        { key: "pricingTier", label: language === 'bn' ? "‡¶ï‡ßã‡¶® ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶∏‡¶ø‡¶Ç ‡¶ü‡¶æ‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßá‡¶∞?" : "Which pricing tier interests you most?", type: "pricing", required: true },
        { key: "customPrice", label: language === 'bn' ? "‡¶Ø‡¶¶‡¶ø '‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø', ‡¶Ü‡¶™‡¶®‡¶ø ‡¶Æ‡¶æ‡¶∏‡ßá ‡¶ï‡¶§ ‡¶™‡ßá ‡¶ï‡¶∞‡¶¨‡ßá‡¶®?" : "If 'Other', what would you pay per month?", type: "text", conditional: "pricingTier", conditionalValue: "Other" },
        { key: "adTolerance", label: language === 'bn' ? "‡¶´‡ßç‡¶∞‡¶ø ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶®‡ßá ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶® ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Æ‡¶§‡¶æ‡¶Æ‡¶§?" : "How do you feel about ads in the free version?", type: "select", options: language === 'bn' ? ["‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶® ‡¶Æ‡¶æ‡¶á‡¶®‡ßá ‡¶ï‡¶∞‡¶ø ‡¶®‡¶æ", "‡¶´‡ßç‡¶∞‡¶ø ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶π‡¶®‡ßÄ‡¶Ø‡¶º", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶® ‡¶õ‡¶æ‡¶°‡¶º‡¶æ ‡¶™‡¶õ‡¶®‡ßç‡¶¶", "‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£‡ßá ‡¶è‡¶°‡¶º‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶¨"] : ["Don't mind ads", "Tolerable for free features", "Neutral", "Prefer no ads", "Would avoid due to ads"], required: true },
        { key: "trialInterest", label: language === 'bn' ? "‡ß≠-‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶ü‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡¶æ‡¶≤‡ßá ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π?" : "Interest in 7-day premium trial?", type: "select", options: language === 'bn' ? ["‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶ñ‡ßÅ‡¶¨ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º", "‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º"] : ["Very interested", "Somewhat interested", "Neutral", "Not very interested", "Not interested"], required: true },
        { key: "referralReward", label: language === 'bn' ? "‡¶∏‡¶´‡¶≤ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï ‡¶™‡ßá‡¶§‡ßá ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ?" : "Interest in earning cash back for successful referrals?", type: "select", options: language === 'bn' ? ["‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ - ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶ö‡¶æ‡¶á", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶ñ‡ßÅ‡¶¨ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º", "‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º"] : ["Very interested - want details", "Somewhat interested", "Neutral", "Not very interested", "Not interested"], required: true },
        { key: "preferredReward", label: language === 'bn' ? "‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶™‡ßá‡¶á‡¶Ç ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶∞‡¶ø‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°?" : "Preferred referral reward for each paying friend?", type: "select", options: language === 'bn' ? ["$‡ß´ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï", "$‡ßß‡ß¶ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï", "$‡ßß‡ß´ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï", "‡ßß ‡¶Æ‡¶æ‡¶∏ ‡¶´‡ßç‡¶∞‡¶ø", "‡¶Ö‡¶®‡ßç‡¶Ø ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£"] : ["$5 cash back", "$10 cash back", "$15 cash back", "1 month free", "Other amount"], required: true }
      ]
    },
    {
      title: t.steps.usage, 
      fields: [
        { key: "deviceUsage", label: language === 'bn' ? "‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏" : "Primary device for studying", type: "select", options: language === 'bn' ? ["‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶´‡ßã‡¶®", "‡¶≤‡ßç‡¶Ø‡¶æ‡¶™‡¶ü‡¶™", "‡¶°‡ßá‡¶∏‡ßç‡¶ï‡¶ü‡¶™", "‡¶ü‡ßç‡¶Ø‡¶æ‡¶¨‡¶≤‡ßá‡¶ü", "‡¶Æ‡¶ø‡¶ï‡ßç‡¶∏‡¶° ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏"] : ["Mobile phone", "Laptop", "Desktop", "Tablet", "Mix of devices"], required: true },
        { key: "universityType", label: language === 'bn' ? "‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶®" : "University type", type: "select", options: language === 'bn' ? ["‡¶™‡¶æ‡¶¨‡¶≤‡¶ø‡¶ï ‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø", "‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø", "‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ü‡¶ø ‡¶ï‡¶≤‡ßá‡¶ú", "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø"] : ["Public university", "Private university", "Community college", "Online university"] },
        { key: "referralSource", label: language === 'bn' ? "‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ú‡¶æ‡¶®‡¶≤‡ßá‡¶®?" : "How did you hear about us?", type: "select", options: language === 'bn' ? ["‡¶∏‡ßã‡¶∂‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ (‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶æ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ/‡¶ü‡¶ø‡¶ï‡¶ü‡¶ï)", "‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßÅ‡¶°‡ßá‡¶®‡ßç‡¶ü ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™", "‡¶¨‡¶®‡ßç‡¶ß‡ßÅ/‡¶∏‡¶π‡¶™‡¶æ‡¶†‡ßÄ", "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö", "‡¶á‡¶â‡¶®‡¶ø‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶ø‡¶ü‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞", "‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™/‡¶´‡ßã‡¶∞‡¶æ‡¶Æ", "‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®", "‡¶´‡ßá‡¶∏‡¶¨‡ßÅ‡¶ï ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®", "‡¶∞‡ßá‡¶°‡¶ø‡¶ü", "‡¶≤‡¶ø‡¶Ç‡¶ï‡¶°‡¶á‡¶®", "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø"] : ["Social media (Instagram/TikTok)", "University student group", "Friend/classmate", "Online search", "University career center", "Study group/forum", "YouTube ad", "Facebook ad", "Reddit", "LinkedIn", "Other"], required: true },
        { key: "referralLikelihood", label: language === 'bn' ? "‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡¶æ" : "Likelihood to recommend to friends", type: "select", options: language === 'bn' ? ["‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡¶æ‡¶Æ‡¶Ø‡¶º", "‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡¶æ‡¶Æ‡¶Ø‡¶º", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶Ö‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡ßç‡¶Ø", "‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶Ö‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡ßç‡¶Ø"] : ["Very likely", "Likely", "Neutral", "Unlikely", "Very unlikely"] },
        {
          key: "leaderboardParticipation",
          label: language === 'bn' ? "‡¶¨‡¶®‡ßç‡¶ß‡ßÅ ‡¶ì ‡¶∏‡¶π‡¶™‡¶æ‡¶†‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ‡¶Ø‡¶º ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π?" : "Interest in competing with friends and peers on leaderboards?",
          type: "select",
          options: language === 'bn' ? 
            ["‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶ñ‡ßÅ‡¶¨ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º", "‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶®‡¶Ø‡¶º"] :
            ["Very interested", "Somewhat interested", "Neutral", "Not very interested", "Not interested"],
          required: true
        },
        {
          key: "studyStreakImportance",
          label: language === 'bn' ? "‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶ï (‡¶¶‡¶ø‡¶®) ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶ï‡¶§‡¶ü‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ï?" : "How motivating would tracking study streaks (consecutive days) be?",
          type: "select",
          options: language === 'bn' ? 
            ["‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ï", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ï", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶ñ‡ßÅ‡¶¨ ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ï ‡¶®‡¶Ø‡¶º", "‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ï ‡¶®‡¶Ø‡¶º"] :
            ["Very motivating", "Somewhat motivating", "Neutral", "Not very motivating", "Not motivating"]
        },
        {
          key: "badgeMotivation",
          label: language === 'bn' ? "‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶™‡¶°‡¶º‡¶§‡ßá ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡¶æ‡¶£‡¶ø‡¶§ ‡¶ï‡¶∞‡¶¨‡ßá?" : "Would earning achievement badges motivate you to study more?",
          type: "select",
          options: language === 'bn' ? 
            ["‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á", "‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨‡¶§", "‡¶®‡¶ø‡¶∞‡¶™‡ßá‡¶ï‡ßç‡¶∑", "‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨‡¶§ ‡¶®‡¶æ", "‡¶®‡¶æ, ‡¶Æ‡ßã‡¶ü‡ßá‡¶ì ‡¶®‡¶æ"] :
            ["Yes, definitely", "Probably", "Neutral", "Probably not", "No, not at all"]
        }
      ]
    }
  ];

  const renderField = (field) => {
    if (field.type === 'pricing') {
      return (
        <div className="space-y-4">
          {/* Free Tier Highlight */}
          <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4 animate-pulse">
            <h4 className="font-semibold text-green-800 mb-2">{t.freeOffer}</h4>
            <p className="text-green-700 text-sm">{language === 'bn' ? '‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶´‡ßç‡¶∞‡¶ø ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶Ø‡¶æ‡¶§‡ßá ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞, ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶® ‡¶è‡¶¨‡¶Ç ‡ß≠-‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶ü‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡¶æ‡¶≤‡•§' : 'Start with our free version including basic features, ads, and a 7-day premium trial to test all features.'}</p>
          </div>

          {pricingTiers.map(tier => (
            <label key={tier.name} className="flex items-start space-x-3 p-4 bg-white/20 border border-white/30 rounded-lg hover:bg-white/30 cursor-pointer transition-all duration-200 hover:shadow-md">
              <input
                type="radio"
                name="pricingTier"
                value={tier.name}
                checked={formData.pricingTier === tier.name}
                onChange={(e) => updateFormData('pricingTier', e.target.value)}
                className="mt-1 text-blue-400"
              />
              <div className="flex-1">
                <div className="flex justify-between items-center mb-1">
                  <span className="font-medium text-white">{tier.name}</span>
                  <span className="font-bold text-blue-300">{tier.price}/month</span>
                </div>
                <p className="text-sm text-white/80 mb-2">{tier.description}</p>
                <ul className="text-xs text-white/70 space-y-1">
                  {tier.features.map((feature, idx) => (
                    <li key={idx} className="flex items-center space-x-1">
                      <CheckCircle className="w-3 h-3 text-green-400" />
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </label>
          ))}

          {/* Custom Price Option */}
          <label className="flex items-center space-x-3 p-4 bg-white/20 border border-white/30 rounded-lg hover:bg-white/30 cursor-pointer transition-all duration-200">
            <input
              type="radio"
              name="pricingTier"
              value="Other"
              checked={formData.pricingTier === "Other"}
              onChange={(e) => updateFormData('pricingTier', e.target.value)}
              className="text-blue-400"
            />
            <span className="font-medium text-white">{language === 'bn' ? '‡¶Ö‡¶®‡ßç‡¶Ø ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£' : 'Other amount'}</span>
          </label>
        </div>
      );
    }

    if (field.conditional && formData[field.conditional] !== field.conditionalValue) {
      return null;
    }

    if (field.type === 'select') {
      return (
        <select
          value={formData[field.key]}
          onChange={(e) => updateFormData(field.key, e.target.value)}
          className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white text-gray-900 text-base transition-all duration-200"
          required={field.required}
        >
          <option value="">{language === 'bn' ? '‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶ø‡¶ï‡¶≤‡ßç‡¶™ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®' : 'Select an option'}</option>
          {field.options.map(option => (
            <option key={option} value={option}>{option}</option>
          ))}
        </select>
      );
    }

    if (field.type === 'multiselect') {
      return (
        <div className="space-y-2">
          {field.options.map(option => (
            <label key={option} className="flex items-center space-x-2 hover:bg-gray-50 p-2 rounded transition-colors duration-200">
              <input
                type="checkbox"
                checked={formData[field.key].includes(option)}
                onChange={(e) => {
                  const current = formData[field.key] || [];
                  if (e.target.checked) {
                    updateFormData(field.key, [...current, option]);
                  } else {
                    updateFormData(field.key, current.filter(item => item !== option));
                  }
                }}
                className="rounded text-blue-600"
              />
              <span>{option}</span>
            </label>
          ))}
        </div>
      );
    }

    return (
      <input
        type={field.type}
        value={formData[field.key]}
        onChange={(e) => updateFormData(field.key, e.target.value)}
        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white text-gray-900 text-base font-medium transition-all duration-200"
        required={field.required}
        placeholder={field.key === 'customPrice' ? (language === 'bn' ? '‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶® (‡¶Ø‡ßá‡¶Æ‡¶®, $‡ßß‡ß®)' : 'Enter amount (e.g., $12)') : ''}
      />
    );
  };

  const canProceed = () => {
    const currentStepData = steps[currentStep - 1];
    return currentStepData.fields.every(field => {
      if (field.conditional && formData[field.conditional] !== field.conditionalValue) {
        return true;
      }
      
      if (field.required) {
        const value = formData[field.key];
        if (field.type === 'multiselect') {
          return value && value.length > 0;
        }
        return value && value.trim() !== '';
      }
      
      return true;
    });
  };

  const submitForm = async () => {
    try {
      const response = await fetch('/api/backend', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          timestamp: new Date().toISOString(),
          language: language,
          ...formData,
          preferredFeatures: Array.isArray(formData.preferredFeatures) ? formData.preferredFeatures.join(', ') : '',
          competitiveFeatures: Array.isArray(formData.competitiveFeatures) ? formData.competitiveFeatures.join(', ') : ''
        }),
      });

      if (response.ok) {
        const result = await response.json();
        alert(language === 'bn' ? 
          `‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ${formData.name}! ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§\n\n‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶ï‡ßã‡¶°: ${result.referralCode}\n\n‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶¶‡ßá‡¶∞ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∞‡¶ø‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶™‡¶æ‡¶®!` :
          `Thank you ${formData.name}! Your information has been saved.\n\nYour referral code: ${result.referralCode}\n\nRefer friends and earn rewards!`
        );
        // Redirect to landing page after 3 seconds
        setTimeout(() => {
          setCurrentStep(0);
        }, 3000);
      } else {
        throw new Error('Failed to save data');
      }
    } catch (error) {
      console.error('Error:', error);
      alert(language === 'bn' ? 
        '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶¨‡¶æ ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§' :
        'There was an error saving your information. Please try again or contact us directly.'
      );
    }
  };

  if (currentStep > 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">
        {/* Animated Background */}
        <div className="absolute inset-0 opacity-20">
          <div className="absolute top-20 left-20 w-72 h-72 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl animate-blob"></div>
          <div className="absolute top-40 right-20 w-72 h-72 bg-yellow-500 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000"></div>
          <div className="absolute -bottom-8 left-40 w-72 h-72 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-4000"></div>
        </div>

        <div className="container mx-auto px-4 py-8 relative z-10">
          {/* Language Toggle */}
          <div className="absolute top-4 right-4">
            <button
              onClick={() => setLanguage(language === 'en' ? 'bn' : 'en')}
              className="flex items-center space-x-2 px-4 py-2 bg-white/10 text-white rounded-lg hover:bg-white/20 transition-colors"
            >
              <Globe className="w-4 h-4" />
              <span>{language === 'en' ? '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ' : 'English'}</span>
            </button>
          </div>

          <div className="max-w-2xl mx-auto">
            {/* Progress Bar */}
            <div className="mb-8">
              <div className="flex justify-between items-center mb-2">
                <span className="text-white font-medium">
                  {language === 'bn' ? `‡¶ß‡¶æ‡¶™ ${currentStep} ‡¶è‡¶∞ ${steps.length}` : `Step ${currentStep} of ${steps.length}`}
                </span>
                <span className="text-white/60">{Math.round((currentStep / steps.length) * 100)}%</span>
              </div>
              <div className="w-full bg-white/20 rounded-full h-2">
                <div 
                  className="bg-gradient-to-r from-blue-400 to-purple-400 h-2 rounded-full transition-all duration-500 ease-out"
                  style={{ width: `${(currentStep / steps.length) * 100}%` }}
                ></div>
              </div>
            </div>

            {/* Form */}
            <div className="bg-white/10 backdrop-blur-lg rounded-xl p-8 shadow-2xl border border-white/20 animate-fadeIn">
              <h2 className="text-2xl font-bold text-white mb-2">{steps[currentStep - 1].title}</h2>
              {steps[currentStep - 1].description && (
                <p className="text-white/80 mb-6">{steps[currentStep - 1].description}</p>
              )}
              
              <div className="space-y-6">
                {steps[currentStep - 1].fields.map(field => (
                  <div key={field.key} className="animate-slideIn">
                    <label className="block text-sm font-medium text-white mb-2">
                      {field.label}
                      {field.required && <span className="text-red-400">*</span>}
                    </label>
                    {renderField(field)}
                  </div>
                ))}
              </div>

              <div className="flex justify-between mt-8">
                <button
                  onClick={prevStep}
                  className="px-6 py-3 border border-white/30 rounded-lg text-white hover:bg-white/10 transition-all duration-200 transform hover:scale-105"
                >
                  {language === 'bn' ? '‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶¨‡¶∞‡ßç‡¶§‡ßÄ' : 'Previous'}
                </button>
                
                {currentStep === steps.length ? (
                  <button
                    onClick={submitForm}
                    disabled={!canProceed()}
                    className="px-8 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 flex items-center space-x-2"
                  >
                    <Trophy className="w-5 h-5" />
                    <span>{language === 'bn' ? '‡¶ì‡¶Ø‡¶º‡ßá‡¶ü‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ø‡¶®' : 'Join Waitlist'}</span>
                  </button>
                ) : (
                  <button
                    onClick={nextStep}
                    disabled={!canProceed()}
                    className="px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 flex items-center space-x-2"
                  >
                    <span>{language === 'bn' ? '‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ' : 'Next'}</span>
                    <ArrowRight className="w-4 h-4" />
                  </button>
                )}
              </div>
            </div>
          </div>
        </div>

        <style jsx>{`
          @keyframes blob {
            0% { transform: translate(0px, 0px) scale(1); }
            33% { transform: translate(30px, -50px) scale(1.1); }
            66% { transform: translate(-20px, 20px) scale(0.9); }
            100% { transform: translate(0px, 0px) scale(1); }
          }
          .animate-blob {
            animation: blob 7s infinite;
          }
          .animation-delay-2000 {
            animation-delay: 2s;
          }
          .animation-delay-4000 {
            animation-delay: 4s;
          }
          .animate-fadeIn {
            animation: fadeIn 0.5s ease-in;
          }
          .animate-slideIn {
            animation: slideIn 0.3s ease-out;
          }
          @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
          }
          @keyframes slideIn {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
          }
        `}</style>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">
      {/* Animated Background */}
      <div className="absolute inset-0 opacity-20">
        <div className="absolute top-20 left-20 w-72 h-72 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl animate-blob"></div>
        <div className="absolute top-40 right-20 w-72 h-72 bg-yellow-500 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000"></div>
        <div className="absolute -bottom-8 left-40 w-72 h-72 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-4000"></div>
      </div>

      {/* Header */}
      <nav className="container mx-auto px-4 py-6 relative z-20">
        <div className="flex justify-between items-center">
          <div className="text-xl sm:text-2xl font-bold text-white flex items-center space-x-2">
            <Brain className="w-6 h-6 sm:w-8 sm:h-8" />
            <span>{t.title}</span>
          </div>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center space-x-4">
            {isAdmin && (
              <>
                <a
                  href="/referrals"
                  className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-all duration-200 transform hover:scale-105"
                >
                  Referrals
                </a>
                <a
                  href="/analyze"
                  className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-all duration-200 transform hover:scale-105"
                >
                  Analytics
                </a>
              </>
            )}
            <button
              onClick={() => setLanguage(language === 'en' ? 'bn' : 'en')}
              className="flex items-center space-x-2 px-4 py-2 bg-white/10 text-white rounded-lg hover:bg-white/20 transition-all duration-200 transform hover:scale-105"
            >
              <Globe className="w-4 h-4" />
              <span>{language === 'en' ? '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ' : 'English'}</span>
            </button>
            <button
              onClick={() => setCurrentStep(1)}
              className="px-6 py-2 bg-white/10 text-white rounded-full hover:bg-white/20 transition-all duration-200 transform hover:scale-105"
            >
              {t.joinWaitlist}
            </button>
            {isSignedIn ? (
              <UserButton afterSignOutUrl="/" />
            ) : (
              <SignInButton mode="modal">
                <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                  Sign In
                </button>
              </SignInButton>
            )}
          </div>

          {/* Mobile menu button */}
          <button
            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
            className="md:hidden p-2 text-white hover:bg-white/10 rounded-lg transition-colors"
          >
            {mobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>

        {/* Mobile Navigation */}
        {mobileMenuOpen && (
          <div className="md:hidden absolute top-full left-0 right-0 bg-black/95 backdrop-blur-sm border-t border-white/10 p-4 space-y-4">
            {isAdmin && (
              <>
                <a
                  href="/referrals"
                  className="block px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-center"
                  onClick={() => setMobileMenuOpen(false)}
                >
                  Referrals
                </a>
                <a
                  href="/analyze"
                  className="block px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-center"
                  onClick={() => setMobileMenuOpen(false)}
                >
                  Analytics
                </a>
              </>
            )}
            <button
              onClick={() => {
                setLanguage(language === 'en' ? 'bn' : 'en');
                setMobileMenuOpen(false);
              }}
              className="w-full flex items-center justify-center space-x-2 px-4 py-2 bg-white/10 text-white rounded-lg hover:bg-white/20 transition-colors"
            >
              <Globe className="w-4 h-4" />
              <span>{language === 'en' ? '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ' : 'English'}</span>
            </button>
            <button
              onClick={() => {
                setCurrentStep(1);
                setMobileMenuOpen(false);
              }}
              className="w-full px-6 py-2 bg-white/10 text-white rounded-full hover:bg-white/20 transition-colors"
            >
              {t.joinWaitlist}
            </button>
            <div className="flex justify-center">
              {isSignedIn ? (
                <UserButton afterSignOutUrl="/" />
              ) : (
                <SignInButton mode="modal">
                  <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                    Sign In
                  </button>
                </SignInButton>
              )}
            </div>
          </div>
        )}
      </nav>

      {/* Hero Section */}
      <section className="container mx-auto px-4 py-12 sm:py-20 relative z-10">
        <div className="max-w-4xl mx-auto text-center">
          <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-4 sm:mb-6 animate-fadeIn leading-tight">
            {t.hero.split(' ').slice(0, -1).join(' ')}
            <span className="bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent block sm:inline">
              {' ' + t.hero.split(' ').slice(-1)}
            </span>
          </h1>
          
          <p className="text-base sm:text-lg md:text-xl text-white/80 mb-6 sm:mb-8 max-w-2xl mx-auto animate-slideIn px-4 sm:px-0">
            {t.heroSub}
          </p>

          {/* Free Tier Highlight */}
          <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-4 sm:p-6 mb-6 sm:mb-8 max-w-sm sm:max-w-md mx-auto border border-white/20 animate-pulse">
            <div className="text-green-400 text-sm font-medium">{t.freeOffer}</div>
            <div className="text-lg sm:text-xl font-bold text-white mb-1">
              {t.freeDesc}
            </div>
            <div className="text-white/60 text-xs sm:text-sm">{t.trialDesc}</div>
          </div>

          <button
            onClick={() => setCurrentStep(1)}
            className="px-6 sm:px-8 py-3 sm:py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white text-base sm:text-lg font-semibold rounded-xl hover:from-blue-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 shadow-2xl flex items-center space-x-2 mx-auto group"
          >
            <Zap className="w-4 h-4 sm:w-5 sm:h-5 group-hover:animate-pulse" />
            <span>{t.getAccess}</span>
            <ChevronRight className="w-4 h-4 sm:w-5 sm:h-5 group-hover:translate-x-1 transition-transform" />
          </button>

          <p className="text-white/60 text-xs sm:text-sm mt-4">
            {language === 'bn' ? '‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡ß´‡ß¶‡ß¶+ ‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡ßÄ ‡¶ì‡¶Ø‡¶º‡ßá‡¶ü‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡ßá' : 'Join 500+ students already on the waitlist'}
          </p>
        </div>
      </section>

      {/* Features */}
      <section className="container mx-auto px-4 py-12 sm:py-20 relative z-10">
        <h2 className="text-2xl sm:text-3xl font-bold text-white text-center mb-8 sm:mb-12 animate-fadeIn">
          {language === 'bn' ? '‡¶∏‡¶´‡¶≤ ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ø‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®' : 'Everything You Need to Succeed'}
        </h2>
        
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 sm:gap-8">
          {features.map((feature, index) => (
            <div key={index} className="bg-white/10 backdrop-blur-sm rounded-xl p-4 sm:p-6 hover:bg-white/20 transition-all duration-300 transform hover:scale-105 hover:rotate-1 border border-white/10 animate-slideIn" style={{animationDelay: `${index * 0.1}s`}}>
              <div className="text-blue-400 mb-3 sm:mb-4 transform group-hover:scale-110 transition-transform">{feature.icon}</div>
              <h3 className="text-lg sm:text-xl font-semibold text-white mb-2">{feature.title}</h3>
              <p className="text-white/70 text-sm sm:text-base">{feature.desc}</p>
            </div>
          ))}
        </div>
      </section>

      {/* Gamification Preview */}
      <section className="container mx-auto px-4 py-12 sm:py-20 relative z-10">
        <div className="bg-white/5 backdrop-blur-sm rounded-2xl p-4 sm:p-8 border border-white/10">
          <div className="text-center mb-6 sm:mb-8">
            <h3 className="text-xl sm:text-2xl font-bold text-white mb-2 sm:mb-4 flex items-center justify-center space-x-2 flex-wrap">
              <Trophy className="w-5 h-5 sm:w-6 sm:h-6 text-yellow-400" />
              <span className="text-center">{language === 'bn' ? '‡¶ó‡ßá‡¶Æ‡¶ø‡¶´‡¶æ‡¶á‡¶° ‡¶≤‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ' : 'Gamified Learning Experience'}</span>
            </h3>
            <p className="text-white/80 text-sm sm:text-base px-4 sm:px-0">
              {language === 'bn' ? 
                '‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶°, ‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶°‡¶º‡¶æ‡¶≤‡ßá‡¶ñ‡¶æ‡¶ï‡ßá ‡¶Æ‡¶ú‡¶æ‡¶¶‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®' :
                'Make studying fun with global leaderboards, achievement badges, and study streaks'
              }
            </p>
          </div>

          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
            <div className="bg-white/10 rounded-lg p-4 sm:p-6 text-center transform hover:scale-105 transition-all duration-200">
              <Award className="w-8 h-8 sm:w-12 sm:h-12 text-yellow-400 mx-auto mb-3" />
              <h4 className="font-semibold text-white mb-2 text-sm sm:text-base">
                {language === 'bn' ? '‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶ô‡ßç‡¶ï‡¶ø‡¶Ç' : 'Global Rankings'}
              </h4>
              <p className="text-white/70 text-xs sm:text-sm">
                {language === 'bn' ? 
                  '‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡ßá‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®' :
                  'Compete with students worldwide'
                }
              </p>
            </div>

            <div className="bg-white/10 rounded-lg p-4 sm:p-6 text-center transform hover:scale-105 transition-all duration-200">
              <Target className="w-8 h-8 sm:w-12 sm:h-12 text-blue-400 mx-auto mb-3" />
              <h4 className="font-semibold text-white mb-2 text-sm sm:text-base">
                {language === 'bn' ? '‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶ï' : 'Study Streaks'}
              </h4>
              <p className="text-white/70 text-xs sm:text-sm">
                {language === 'bn' ? 
                  '‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶ß‡¶æ‡¶∞‡¶æ‡¶¨‡¶æ‡¶π‡¶ø‡¶ï‡¶§‡¶æ ‡¶¨‡¶ú‡¶æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®' :
                  'Maintain daily study consistency'
                }
              </p>
            </div>

            <div className="bg-white/10 rounded-lg p-4 sm:p-6 text-center transform hover:scale-105 transition-all duration-200 col-span-1 sm:col-span-2 lg:col-span-1">
              <Star className="w-8 h-8 sm:w-12 sm:h-12 text-purple-400 mx-auto mb-3" />
              <h4 className="font-semibold text-white mb-2 text-sm sm:text-base">
                {language === 'bn' ? '‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú' : 'Achievement Badges'}
              </h4>
              <p className="text-white/70 text-xs sm:text-sm">
                {language === 'bn' ? 
                  '‡¶Æ‡¶æ‡¶á‡¶≤‡¶∏‡ßç‡¶ü‡ßã‡¶® ‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶Ü‡¶®‡¶≤‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®' :
                  'Unlock badges for reaching milestones'
                }
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Social Proof */}
      <section className="container mx-auto px-4 py-12 sm:py-20 relative z-10">
        <div className="bg-white/5 backdrop-blur-sm rounded-2xl p-4 sm:p-8 border border-white/10">
          <div className="text-center mb-6 sm:mb-8">
            <h3 className="text-xl sm:text-2xl font-bold text-white mb-2 sm:mb-4">
              {language === 'bn' ? '‡¶∂‡ßÄ‡¶∞‡ßç‡¶∑ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º‡ßá‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶∏‡ßç‡¶§' : 'Trusted by Students at Top Universities'}
            </h3>
            <div className="flex flex-wrap justify-center items-center gap-4 sm:gap-8 text-white/60 text-sm sm:text-base">
              <span>Stanford</span>
              <span>MIT</span>
              <span>Harvard</span>
              <span>UC Berkeley</span>
              <span>NYU</span>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
            {[
              { 
                name: "Sarah M.", 
                university: "Stanford CS", 
                text: language === 'bn' ? 
                  "‡¶Ö‡¶¨‡¶∂‡ßá‡¶∑‡ßá, ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡¶°‡¶º‡¶§‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡ßá‡•§" :
                  "Finally, a tool that actually helps me study smarter, not harder." 
              },
              { 
                name: "Alex R.", 
                university: "MIT Engineering", 
                text: language === 'bn' ?
                  "‡¶è‡¶Ü‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶§ ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ø‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡¶ø‡•§" :
                  "The AI quizzes are so good, I stopped using other study apps." 
              },
              { 
                name: "Maria L.", 
                university: "Harvard Business", 
                text: language === 'bn' ?
                  "‡¶è‡¶ï‡¶ú‡¶æ‡¶Ø‡¶º‡¶ó‡¶æ‡¶Ø‡¶º ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶æ ‡¶¶‡¶æ‡¶∞‡ßÅ‡¶£‡•§ ‡¶ó‡ßá‡¶Æ ‡¶ö‡ßá‡¶û‡ßç‡¶ú‡¶æ‡¶∞!" :
                  "Love how it tracks everything in one place. Game changer!" 
              }
            ].map((testimonial, index) => (
              <div key={index} className="bg-white/10 rounded-lg p-4 sm:p-6 transform hover:scale-105 transition-all duration-200">
                <div className="flex items-center mb-3">
                  {[...Array(5)].map((_, i) => (
                    <Star key={i} className="w-3 h-3 sm:w-4 sm:h-4 text-yellow-400 fill-current" />
                  ))}
                </div>
                <p className="text-white/80 mb-3 text-sm sm:text-base">"{testimonial.text}"</p>
                <div className="text-white/60 text-xs sm:text-sm">
                  <div>{testimonial.name}</div>
                  <div>{testimonial.university}</div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA */}
      <section className="container mx-auto px-4 py-12 sm:py-20 text-center relative z-10">
        <h2 className="text-2xl sm:text-3xl font-bold text-white mb-4 sm:mb-6 px-4 sm:px-0">
          {language === 'bn' ? '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶ó‡ßá‡¶Æ ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞‡¶ø‡¶§ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§?' : 'Ready to Transform Your Study Game?'}
        </h2>
        <p className="text-base sm:text-xl text-white/80 mb-6 sm:mb-8 px-4 sm:px-0">
          {language === 'bn' ? 
            '‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶π‡¶æ‡¶ú‡¶æ‡¶∞‡ßã ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶è‡¶Ü‡¶á ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡¶°‡¶º‡¶æ‡¶≤‡ßá‡¶ñ‡¶æ‡¶Ø‡¶º ‡¶è‡¶ó‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá' :
            'Join thousands of students already using AI to ace their studies'
          }
        </p>
        
        <button
          onClick={() => setCurrentStep(1)}
          className="px-8 sm:px-12 py-3 sm:py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white text-lg sm:text-xl font-semibold rounded-xl hover:from-blue-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 shadow-2xl group"
        >
          <span className="flex items-center space-x-2">
            <Zap className="w-5 h-5 sm:w-6 sm:h-6 group-hover:animate-pulse" />
            <span>{language === 'bn' ? '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®' : 'Start Your Journey'}</span>
          </span>
        </button>
      </section>

      {/* Footer */}
      <footer className="container mx-auto px-4 py-8 border-t border-white/10 relative z-10">
        <div className="flex flex-col items-center space-y-4">
          {/* WhatsApp Contact */}
          <a
            href={`https://wa.me/8801755557150?text=${encodeURIComponent(
              language === 'bn' ? 
                '‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø Performance AI ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ‡•§' :
                'Hello! I am interested in learning more about Performance AI.'
            )}`}
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center space-x-2 px-6 py-3 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-all duration-200 transform hover:scale-105"
          >
            <svg className="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
              <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.515"/>
            </svg>
            <span>{language === 'bn' ? 'WhatsApp ‡¶è ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®' : 'Contact us on WhatsApp'}</span>
          </a>
          
          <div className="text-center text-white/60">
            <p>&copy; 2024 Performance AI. {language === 'bn' ? '‡¶∏‡¶ï‡¶≤ ‡¶Ö‡¶ß‡¶ø‡¶ï‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§‡•§' : 'All rights reserved.'}</p>
          </div>
        </div>
      </footer>

      <style jsx>{`
        @keyframes blob {
          0% { transform: translate(0px, 0px) scale(1); }
          33% { transform: translate(30px, -50px) scale(1.1); }
          66% { transform: translate(-20px, 20px) scale(0.9); }
          100% { transform: translate(0px, 0px) scale(1); }
        }
        .animate-blob {
          animation: blob 7s infinite;
        }
        .animation-delay-2000 {
          animation-delay: 2s;
        }
        .animation-delay-4000 {
          animation-delay: 4s;
        }
        .animate-fadeIn {
          animation: fadeIn 0.5s ease-in;
        }
        .animate-slideIn {
          animation: slideIn 0.3s ease-out;
        }
        @keyframes fadeIn {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        @keyframes slideIn {
          from { opacity: 0; transform: translateX(-20px); }
          to { opacity: 1; transform: translateX(0); }
        }
      `}</style>
    </div>
  );
};

export default LandingPage;